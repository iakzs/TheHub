--Sec Part Of RaiseAFloppa.lua--
--by iakzs--

do return(function(yS,mJ,pS,RJ,CJ,uS,HS,tS,ES,fJ,wS,xJ,PJ,vJ,LJ,KS,xS,OS,YS,QS,MS,iJ,RS,DS,ZJ,rS,nS,SS,zS,fS,dS,bS,GS,iS,qS,cS,gS,WS,sS,aS,VJ,kS,US,lS,nJ,NS,jS,hS,oS,VS,FJ,eS,AS,IS,ZS,JS,XS,TS,BS,...)local F,i,R=iS,RS,ZS;local v,C,P,L=fS,nS,VS,xS;local m=tS;local V,x=TS,(MS);local M=zS;local K=(ES or KS);local D=HS;local Z,f=XS[GS],XS[qS];local t,T=XS[bS],(IS[oS]);local X,G=YS,YS;local e,H,FS=QS,uS,(0);while FS<3 do if not(FS<=0)then if FS~=1 then G={};FS=3;else do FS=2;end;end;else X=(H and H()or SS);FS=1;end;end;local q=(1);FS=0;local b,I=YS,(YS);while FS<2 do if FS~=0 then do FS=2;end;else do FS=1;end;end;end;do FS=2;end;local o,Y,Q=YS,YS,YS;repeat if not(FS<=1)then if FS~=2 then o=x(R(o,5),cS,function(gb)do if Z(gb,2)~=72 then local ne,Ze=1,(YS);while(OS)do if ne~=0 then Ze=f(P(gb,16));ne=0;else do if not(Y)then do return Ze;end;else local nK=(YS);local lK=0;while(OS)do if not(lK<=0)then do if lK~=1 then Y=YS;lK=1;else do return nK;end;end;end;else do nK=V(Ze,Y);end;lK=2;end;end;end;end;break;end;end;else do Y=P(R(gb,1,1));end;do return wS;end;end;end;end);FS=0;else o=rS;FS=1;end;else do if FS~=0 then FS=3;else do Q=function()local G0=(YS);local M0=1;while(OS)do if not(M0<=0)then if M0~=1 then do q=q+1;end;do M0=0;end;else do G0=Z(o,q,q);end;do M0=2;end;end;else return G0;end;end;end;end;FS=4;end;end;end;until FS==4;local u=(function()local Vm,sm,am,Um=YS,YS,YS,(YS);for lq=0,2 do do if not(lq<=0)then if lq==1 then do q=q+4;end;else do return Um*16777216+am*65536+sm*256+Vm;end;end;else Vm,sm,am,Um=Z(o,q,q+3);end;end;end;end);local S=2147483648;FS=0;local O,r=YS,(YS);while FS~=2 do do if FS~=0 then r=2^52;do FS=2;end;else O=4294967296;do FS=1;end;end;end;end;local c,w=O-1,{[0]=1};do FS=1;end;local B,g,l,U=YS,YS,YS,YS;while(OS)do if not(FS<=1)then do if not(FS<=2)then if FS~=3 then do U={[0]={[0]=0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15},{[0]=1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14},{[0]=2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13},{[0]=3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12},{[0]=4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11},{[0]=5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10},{[0]=6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9},{[0]=7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8},{[0]=8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7},{[0]=9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6},{[0]=10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5},{[0]=11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4},{[0]=12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3},{[0]=13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2},{[0]=14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1},{[0]=15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0}};end;break;else B=function(Gb,ab,Vb)local Tb=YS;for ZI=0,2 do if ZI<=0 then Tb=(Vb/w[ab])%w[Gb];else if ZI~=1 then return Tb;else Tb=Tb-Tb%1;end;end;end;end;FS=2;end;else g=function()local ic,Sc=u(),(u());if not(Sc>=S)then else Sc=Sc-O;end;do return Sc*O+ic;end;end;FS=0;end;end;else if FS~=0 then do local fg=(YS);for o8=0,1 do do if o8~=0 then for Sv=1,31 do(w)[Sv]=fg;do fg=fg*2;end;end;else fg=2;end;end;end;end;do FS=3;end;else l=function()local Vb,eb,fb=YS,YS,(YS);for mv=0,3 do do if mv<=1 then do if mv~=0 then do eb=u();end;else Vb=u();end;end;else do if mv~=2 then fb=(-1)^B(1,31,eb);else if not(Vb==0 and eb==0)then else return 0;end;end;end;end;end;end;local jb=(B(11,20,eb));local ob=B(20,0,eb)*O+Vb;local pb,bb=2,(YS);while(OS)do if not(pb<=0)then do if pb~=1 then bb=1;pb=1;else do if jb==0 then if ob~=0 then local wq=(0);while wq<2 do if wq~=0 then bb=0;wq=2;else do jb=1;end;wq=1;end;end;else do return fb*0;end;end;elseif jb~=2047 then else do if ob~=0 then do return fb*(1/0);end;else do return fb*(0/0);end;end;end;end;end;do pb=0;end;end;end;else return fb*(2^(jb-1023))*(ob/r+bb);end;end;end;FS=4;end;end;end;local p=((BS or gS));local J=p and p[lS]or function(Qk,Lk)local Vk=(YS);for tL=0,2 do if tL<=0 then Qk=Qk%O;else if tL~=1 then Vk=1;else Lk=Lk%O;end;end;end;local dk=(YS);local tk=2;repeat if not(tk<=0)then do if tk~=1 then dk=0;tk=0;else return dk+Qk*Vk+Lk*Vk;end;end;else do while Qk>0 and Lk>0 do local Nj,qj,Rj=0,YS,(YS);do while Nj<=2 do if not(Nj<=0)then do if Nj~=1 then dk=dk+U[qj][Rj]*Vk;Nj=3;else Rj=Lk%16;Nj=2;end;end;else do qj=Qk%16;end;Nj=1;end;end;end;Qk=(Qk-qj)/16;Lk=(Lk-Rj)/16;Vk=Vk*16;end;end;tk=1;end;until(US);end;local y=p and p[pS]or function(y9,E9)local p9=0;while(OS)do do if not(p9<=0)then if p9~=1 then E9=E9%O;p9=1;else return((y9+E9)-J(y9,E9))/2;end;else y9=y9%O;p9=2;end;end;end;end;local h=(p and p[JS]or function(Pr,hr)local Rr=2;while(OS)do if not(Rr<=0)then if Rr~=1 then do Pr=Pr%O;end;Rr=1;else hr=hr%O;Rr=0;end;else return c-y(c-Pr,c-hr);end;end;end);local k=(p and p[yS]);local a,A=p and p[hS]or function(Gt)return c-(Gt%O);end,(p and p[aS]);do FS=2;end;local d,j=YS,YS;do repeat if not(FS<=1)then if FS~=2 then d=function(qR)local yR,XR,DR,ER=0,YS,YS,(YS);while(OS)do if not(yR<=0)then do if yR~=1 then do DR=J(XR[1],I);end;yR=1;else ER=J(XR[2],I);break;end;end;else XR={Z(o,q,q+3)};do yR=2;end;end;end;local bR=J(XR[3],I);local GR=(J(XR[4],I));for uY=0,1 do if uY~=0 then q=q+4;else I=(77*I+qR)%256;end;end;return GR*16777216+bR*AS+ER*256+DR;end;FS=1;else do A=A or function(du,nu)local Ru=1;do while(OS)do if Ru==0 then if nu<0 then return k(du,-nu);end;break;else do if not(nu>=32)then else do return 0;end;end;end;Ru=0;end;end;end;return(du*w[nu])%O;end;end;FS=0;end;else if FS~=0 then j=function(J9)local X9,C9=YS,(YS);for qZ=0,4 do if not(qZ<=1)then do if not(qZ<=2)then do if qZ~=3 then return C9;else q=q+X9;end;end;else for Jo=1,X9,7997 do local Bo=Jo+7997-1;local jo,Go=0,(YS);do while jo~=4 do if not(jo<=1)then do if jo~=2 then do C9=C9..f(K(Go));end;jo=4;else for Yo=1,#Go do local so=(1);repeat do if so~=0 then(Go)[Yo]=J(Go[Yo],b);do so=0;end;else b=(J9*b+121)%256;so=2;end;end;until so==2;end;do jo=3;end;end;end;else if jo~=0 then do Go={Z(o,q+Jo-1,q+Bo-1)};end;do jo=2;end;else if Bo>X9 then Bo=X9;end;jo=1;end;end;end;end;end;end;end;else if qZ~=0 then C9=wS;else X9=u();end;end;end;end;do FS=4;end;else do k=k or function(tI,SI)if SI>=32 then do return 0;end;end;local XI=(YS);do for mw=0,1 do if mw~=0 then XI=(tI%O/w[SI]);else if not(SI<0)then else return A(tI,-SI);end;end;end;end;return XI-XI%1;end;end;FS=3;end;end;until FS==4;end;FS=7;local s,W,N,vS,CS=YS,YS,YS,YS,YS;while FS<9 do do if FS<=3 then if FS<=1 then if FS~=0 then do N={};end;do FS=8;end;else FS=9;end;else do if FS==2 then do for ce=1,Q()do local Pe,We={},(0);repeat if We~=0 then for Ou=1,Q()do local yu=Q();local Ku=(YS);local Uu=(0);do while Uu<2 do if Uu==0 then do Ku=(Ou-1)*2;end;Uu=1;else(Pe)[Ku]=B(4,0,yu);Uu=2;end;end;end;Pe[Ku+1]=B(4,4,yu);end;We=2;else(s)[ce-1]=Pe;We=1;end;until We>=2;end;end;FS=5;else CS={};FS=0;end;end;end;else do if not(FS<=5)then if not(FS<=6)then if FS~=7 then vS=1;FS=3;else b=Q();do FS=4;end;end;else s={};do FS=2;end;end;else do if FS~=4 then do W=function(...)return C(kS,...),{...};end;end;FS=1;else I=Q();do FS=6;end;end;end;end;end;end;end;end;FS=0;local PS,LS,mS=YS,YS,(YS);repeat if FS<=1 then do if FS~=0 then mS=LS();FS=3;else function PS(c1,i1,Y1)local m1,H1,e1,V1,M1,A1,x1=Y1[7],Y1[2],Y1[3],Y1[9],Y1[6],Y1[1],Y1[5];local S1=(Y1[4]);local Q1=(M({},{[dS]=jS}));local J1=YS;J1=function(...)local Xa=({});local za,Ya=0,(1);local pa=(H and H()or SS);local Ia=(pa==X and i1 or pa);local ga,sa=W(...);ga=ga-1;do for hV=0,ga do if not(H1>hV)then break;else Xa[hV]=sa[hV+1];end;end;end;do(CS)[2]=Y1;end;CS[3]=Xa;do if not M1 then sa=YS;elseif not(A1)then else do(Xa)[H1]={n=ga>=H1 and ga-H1+1 or 0,K(sa,H1+1,ga+1)};end;end;end;do if Ia==pa then else if not(e)then SS=Ia;else e(J1,Ia);end;end;end;local Qa,aa,ya,Sa=L(function()while true do local Rm=(S1[Ya]);local jm=(Rm[7]);do Ya=Ya+1;end;if not(jm>=63)then if jm<31 then do if not(jm<15)then do if not(jm<23)then if not(jm<27)then do if not(jm<29)then if jm==30 then Xa[Rm[9]]={K({},1,Rm[8])};else(Xa)[Rm[9]]=Rm[1]==Rm[3];end;else if jm==28 then local HG=(Xa[Rm[8]]/Rm[3]);(Xa)[Rm[9]]=HG-HG%1;else(Xa)[Rm[9]]=Rm[1]>Xa[Rm[2]];end;end;end;else if not(jm<25)then if jm==26 then local d4=Rm[9];Xa[d4](Xa[d4+1],Xa[d4+2]);do za=d4-1;end;else if Rm[1]~=Xa[Rm[2]]then do Ya=Ya+1;end;end;end;else if jm==24 then(Xa)[Rm[9]]=Rm[4];else local h3=Rm[9];local s3=(h3+2);local g3=h3+1;do(Xa)[h3]=v(P(Xa[h3]),PJ);end;(Xa)[g3]=v(P(Xa[g3]),LJ);(Xa)[s3]=v(P(Xa[s3]),mJ);do(Xa)[h3]=Xa[h3]-Xa[s3];end;Ya=Rm[6];end;end;end;else if not(jm<19)then if not(jm>=21)then do if jm==20 then do if Rm[8]==70 then Ya=Ya-1;(S1)[Ya]={[9]=(Rm[9]-166)%256,[7]=68,[2]=(Rm[2]-166)%256};else local SG=(Rm[9]);local CG,OG=SG+2,SG+3;local aG=({Xa[SG](Xa[SG+1],Xa[CG])});do for rG=1,Rm[2]do(Xa)[CG+rG]=aG[rG];end;end;local hG=(Xa[OG]);do if hG==YS then Ya=Ya+1;else Xa[CG]=hG;end;end;end;end;else(Xa)[Rm[9]]=US;end;end;else if jm~=22 then do(Xa)[Rm[9]]=Xa[Rm[8]]==Xa[Rm[2]];end;else do Xa[Rm[9]]=OS;end;Ya=Ya+1;end;end;else if not(jm>=17)then if jm~=16 then(Xa)[Rm[9]]=Rm[1]-Xa[Rm[2]];else Xa[Rm[9]]=Rm[1]+Xa[Rm[2]];end;else if jm==18 then do za=Rm[9];end;(Xa[za])();do za=za-1;end;else do if Xa[Rm[8]]==Xa[Rm[2]]then else do Ya=Ya+1;end;end;end;end;end;end;end;end;else if not(jm<7)then if not(jm>=11)then if not(jm>=9)then if jm~=8 then(Xa)[Rm[9]]=CS[Rm[8]];else local sk=Rm[9];Xa[sk](Xa[sk+1]);do za=sk-1;end;end;else if jm==10 then Xa[Rm[9]]=Xa[Rm[8]]>Rm[3];else local Hl,Xl=Rm[9],(Xa[Rm[8]]);do Xa[Hl+1]=Xl;end;(Xa)[Hl]=Xl[Rm[3]];end;end;else if not(jm>=13)then do if jm==12 then(Xa)[Rm[9]]=J(Xa[Rm[8]],Xa[Rm[2]]);else local Cf=(Rm[9]);Xa[Cf](K(Xa,Cf+1,za));za=Cf-1;end;end;else if jm==14 then do Xa[Rm[9]]=Rm[1]^Xa[Rm[2]];end;else local wn=Xa[Rm[8]];if not wn then Ya=Ya+1;else do(Xa)[Rm[9]]=wn;end;end;end;end;end;else if not(jm<3)then do if not(jm<5)then if jm==6 then Xa[Rm[9]]=h(Xa[Rm[8]],Xa[Rm[2]]);else(Xa)[Rm[9]]=Rm[1]-Rm[3];end;else if jm~=4 then(Xa)[Rm[9]]=OS;else do if Rm[2]==225 then do Ya=Ya-1;end;do S1[Ya]={[2]=(Rm[8]-44)%256,[7]=68,[9]=(Rm[9]-44)%256};end;elseif Rm[2]==197 then Ya=Ya-1;do S1[Ya]={[8]=(Rm[8]-CJ)%256,[7]=53,[9]=(Rm[9]-CJ)%256};end;else repeat local kh,Rh=Q1,(Xa);do if not(#kh>0)then else local iQ={};for Jx,jx in DS,kh do for z7,r7 in DS,jx do if not(r7[1]==Rh and r7[2]>=0)then else local Uh=(r7[2]);if not(not iQ[Uh])then else iQ[Uh]={Rh[Uh]};end;(r7)[1]=iQ[Uh];do(r7)[2]=1;end;end;end;end;end;end;until OS;return US,Rm[9],za;end;end;end;end;end;else do if not(jm<1)then if jm~=2 then do if Rm[2]==43 then do Ya=Ya-1;end;S1[Ya]={[7]=102,[9]=(Rm[9]-130)%256,[8]=(Rm[8]-130)%256};elseif Rm[2]~=130 then repeat local hA,PA=Q1,(Xa);if#hA>0 then local IO={};do for uU,YU in DS,hA do for Wo,zo in DS,YU do do if not(zo[1]==PA and zo[2]>=0)then else local hD=(zo[2]);if not(not IO[hD])then else do(IO)[hD]={PA[hD]};end;end;do zo[1]=IO[hD];end;(zo)[2]=1;end;end;end;end;end;end;until OS;local WM=Rm[9];return US,WM,WM+Rm[8]-2;else Ya=Ya-1;(S1)[Ya]={[7]=102,[8]=(Rm[8]-74)%256,[9]=(Rm[9]-74)%256};end;end;else local bF,nF=Rm[9],(Rm[8]);za=bF+nF-1;repeat local qB,fB=Q1,(Xa);if not(#qB>0)then else local o8=({});do for cr,Wr in DS,qB do for p9,L9 in DS,Wr do if not(L9[1]==fB and L9[2]>=0)then else local jg=L9[2];if not(not o8[jg])then else do o8[jg]={fB[jg]};end;end;(L9)[1]=o8[jg];L9[2]=1;end;end;end;end;end;until OS;return OS,bF,nF;end;else do Ya=Rm[6];end;end;end;end;end;end;end;else if not(jm<47)then if not(jm>=55)then if jm<51 then if not(jm>=49)then if jm~=48 then if not(Xa[Rm[8]]<=Rm[3])then else Ya=Ya+1;end;else Xa[Rm[9]]=Xa[Rm[8]][Rm[3]];end;else if jm~=50 then local bw=Rm[8];local Hw=Xa[bw];for Dx=bw+1,Rm[2]do Hw=Hw..Xa[Dx];end;(Xa)[Rm[9]]=Hw;else Xa[Rm[9]]=Xa[Rm[8]]==Rm[3];end;end;else if not(jm<53)then do if jm~=54 then Xa[Rm[9]]=#Xa[Rm[8]];else local HW,CW=Rm[9],((Rm[2]-1)*50);for t4=1,Rm[8]do do Xa[HW][CW+t4]=Xa[HW+t4];end;end;end;end;else if jm==52 then for jL=Rm[9],Rm[8]do Xa[jL]=YS;end;else if Rm[8]==56 then Ya=Ya-1;(S1)[Ya]={[8]=(Rm[2]-229)%256,[7]=4,[9]=(Rm[9]-229)%256};else do if not(Xa[Rm[9]])then else do Ya=Ya+1;end;end;end;end;end;end;end;else if not(jm>=59)then if not(jm<57)then if jm==58 then local ez,mz,Gz=Rm[9],Xa[Rm[8]],(Xa[Rm[2]]);(Xa)[ez+1]=mz;Xa[ez]=mz[Gz];else(Xa)[Rm[9]]=Rm[1]>=Xa[Rm[2]];end;else if jm==56 then Xa[Rm[9]]=Rm[1]<Xa[Rm[2]];else if not(Xa[Rm[8]]<Xa[Rm[2]])then Ya=Ya+1;end;end;end;else if jm<61 then if jm~=60 then Xa[Rm[9]]=Xa[Rm[8]]<=Xa[Rm[2]];else(Xa)[Rm[9]]=Rm[1]<=Rm[3];end;else if jm==62 then Xa[Rm[9]]=Xa[Rm[8]]-Xa[Rm[2]];else(Xa)[Rm[9]]=Xa[Rm[8]]*Rm[3];end;end;end;end;else do if not(jm>=39)then if jm<35 then if not(jm>=33)then if jm~=32 then Xa[Rm[9]]=Rm[1]/Rm[3];else(Xa)[Rm[9]]=Xa[Rm[8]]^Rm[3];end;else if jm==34 then(Xa)[Rm[9]]=Xa[Rm[8]]~=Rm[3];else if not(not(Rm[1]<=Xa[Rm[2]]))then else do Ya=Ya+1;end;end;end;end;else if not(jm>=37)then if jm==36 then(Xa)[Rm[9]]=Xa[Rm[8]]*Xa[Rm[2]];else local yT=(c1[Rm[8]]);(yT[1])[yT[2]]=Xa[Rm[9]];end;else if jm~=38 then Xa[Rm[9]]=A(Xa[Rm[8]],Xa[Rm[2]]);else do(Xa)[Rm[9]]={};end;end;end;end;else if jm<43 then do if not(jm<41)then do if jm==42 then if Rm[2]~=142 then do(Xa)[Rm[9]]=-Xa[Rm[8]];end;else do Ya=Ya-1;end;S1[Ya]={[9]=(Rm[9]-209)%FJ,[7]=iJ,[8]=(Rm[8]-209)%256};end;else if not(Rm[1]<=Xa[Rm[2]])then else do Ya=Ya+1;end;end;end;end;else if jm==40 then(Xa)[Rm[9]]=Xa[Rm[8]]/Xa[Rm[2]];else(Xa)[Rm[9]]=not Xa[Rm[8]];end;end;end;else if not(jm<45)then if jm~=46 then local ii=Rm[1]/Rm[3];Xa[Rm[9]]=ii-ii%1;else Xa[Rm[9]]=Xa[Rm[8]][Xa[Rm[2]]];end;else if jm==44 then local sk=Rm[9];do za=sk+Rm[8]-1;end;(Xa[sk])(K(Xa,sk+1,za));za=sk-1;else do(Xa)[Rm[9]]=Xa[Rm[8]]>=Xa[Rm[2]];end;end;end;end;end;end;end;end;else do if not(jm>=94)then if not(jm<78)then if not(jm<86)then do if not(jm>=90)then if not(jm>=88)then if jm~=87 then(Xa)[Rm[9]]=y(Xa[Rm[8]],Xa[Rm[2]]);else local C6=Rm[9];Xa[C6]=Xa[C6](K(Xa,C6+1,za));za=C6;end;else if jm==89 then if Rm[2]~=vJ then Xa[Rm[9]]=sa[H1+1];else Ya=Ya-1;S1[Ya]={[9]=(Rm[9]-252)%256,[7]=20,[2]=(Rm[8]-252)%256};end;else Xa[Rm[9]]=Rm[1]~=Xa[Rm[2]];end;end;else if not(jm>=92)then if jm~=91 then(Xa)[Rm[9]]=y(Xa[Rm[8]],Rm[3]);else local lo=Rm[9];Xa[lo]=Xa[lo](Xa[lo+1],Xa[lo+2]);za=lo;end;else if jm==93 then(Xa)[Rm[9]]=Xa[Rm[8]];else local J2=Rm[9];local k2=(Xa[J2+2]);local D2=(Xa[J2]+k2);do(Xa)[J2]=D2;end;do if not(k2>0)then do if not(D2>=Xa[J2+1])then else do Ya=Rm[6];end;(Xa)[J2+3]=D2;end;end;else if not(D2<=Xa[J2+1])then else Ya=Rm[6];Xa[J2+3]=D2;end;end;end;end;end;end;end;else if not(jm>=82)then do if not(jm<80)then if jm==81 then do Xa[Rm[9]]=Xa[Rm[8]]%Xa[Rm[2]];end;else local cJ=((Rm[2]-1)*50);local SJ=(Rm[9]);for Wk=1,za-SJ do Xa[SJ][cJ+Wk]=Xa[SJ+Wk];end;end;else if jm~=79 then Xa[Rm[9]]=Xa[Rm[8]]>=Rm[3];else Xa[Rm[9]][Rm[1]]=Xa[Rm[2]];end;end;end;else if not(jm>=84)then do if jm~=83 then do Xa[Rm[9]]=Rm[1]>Rm[3];end;else Xa[Rm[9]]=J(Rm[1],Xa[Rm[2]]);end;end;else do if jm~=85 then local hQ=Rm[8];Xa[Rm[9]]=Xa[hQ]..Xa[hQ+1];else repeat local SJ,wJ=Q1,(Xa);if#SJ>0 then local nQ={};do for VP,qP in DS,SJ do for GW,PW in DS,qP do do if not(PW[1]==wJ and PW[2]>=0)then else local vr=PW[2];if not(not nQ[vr])then else do nQ[vr]={wJ[vr]};end;end;(PW)[1]=nQ[vr];(PW)[2]=1;end;end;end;end;end;end;until OS;return OS,Rm[9],0;end;end;end;end;end;else if not(jm<70)then if not(jm>=74)then do if not(jm<72)then if jm~=73 then(Xa)[Rm[9]]=Xa[Rm[8]]-Rm[3];else if Xa[Rm[8]]==Rm[3]then else do Ya=Ya+1;end;end;end;else do if jm~=71 then if Xa[Rm[8]]~=Xa[Rm[2]]then else Ya=Ya+1;end;else do(Xa)[Rm[9]]=Xa[Rm[8]]<=Rm[3];end;end;end;end;end;else do if not(jm>=76)then if jm==75 then(Ia)[Rm[4]]=Xa[Rm[9]];else local iU=Rm[9];za=iU+Rm[8]-1;(Xa)[iU]=Xa[iU](K(Xa,iU+1,za));za=iU;end;else if jm~=77 then local BJ=Rm[9];do Xa[BJ]=Xa[BJ](Xa[BJ+1]);end;za=BJ;else(Xa)[Rm[9]]=k(Xa[Rm[8]],Xa[Rm[2]]);end;end;end;end;else if not(jm>=66)then if jm>=64 then if jm~=65 then(Xa)[Rm[9]]=k(Rm[1],Xa[Rm[2]]);else(Xa)[Rm[9]]=a(Xa[Rm[8]]);end;else(CS)[Rm[8]]=Xa[Rm[9]];end;else if not(jm<68)then if jm==69 then do za=Rm[9];end;Xa[za]=Xa[za]();else do if not(not Xa[Rm[9]])then else Ya=Ya+1;end;end;end;else do if jm~=67 then do Xa[Rm[9]]=Xa[Rm[8]]+Rm[3];end;else Xa[Rm[9]]=Xa[Rm[8]]+Xa[Rm[2]];end;end;end;end;end;end;else do if jm>=110 then if not(jm<118)then do if not(jm<122)then do if not(jm<124)then if jm==125 then local hT=(Rm[9]);for Wy=hT,hT+(Rm[8]-1)do Xa[Wy]=sa[H1+(Wy-hT)+1];end;else repeat local Wi,Li=Q1,(Xa);if not(#Wi>0)then else local ty=({});for Ml,bl in DS,Wi do for is,Vs in DS,bl do if not(Vs[1]==Li and Vs[2]>=0)then else local ZR=Vs[2];if not(not ty[ZR])then else ty[ZR]={Li[ZR]};end;Vs[1]=ty[ZR];(Vs)[2]=1;end;end;end;end;until OS;return OS,Rm[9],1;end;else if jm~=123 then Xa[Rm[9]]=y(Rm[1],Xa[Rm[2]]);else do(Xa)[Rm[9]]=Xa[Rm[8]]%Rm[3];end;end;end;end;else if not(jm>=120)then if jm~=119 then(Xa)[Rm[9]]=Xa[Rm[8]]~=Xa[Rm[2]];else(Xa)[Rm[9]]=Rm[1]>=Rm[3];end;else if jm==121 then(Xa)[Rm[9]]=Xa[Rm[8]]<Xa[Rm[2]];else if not(not(Xa[Rm[8]]<Rm[3]))then else do Ya=Ya+1;end;end;end;end;end;end;else if not(jm<114)then do if not(jm>=116)then if jm~=115 then Xa[Rm[9]]=A(Rm[1],Xa[Rm[2]]);else Xa[Rm[9]]=Rm[1]*Rm[3];end;else if jm==117 then do Xa[Rm[9]][Xa[Rm[8]]]=Xa[Rm[2]];end;else local jR=YS;local ZR=(m1[Rm[6]]);local OR=(ZR[8]);if not(OR>0)then else do jR={};end;for Ln=0,OR-1 do local un=(S1[Ya]);local En=un[7];do if En==93 then jR[Ln]={Xa,un[8]};else(jR)[Ln]=c1[un[8]];end;end;do Ya=Ya+1;end;end;T(Q1,jR);end;(Xa)[Rm[9]]=PS(jR,Ia,ZR);end;end;end;else do if not(jm>=112)then if jm~=sS then do(Xa)[Rm[9]]=Xa[Rm[8]]^Xa[Rm[2]];end;else Xa[Rm[9]][Xa[Rm[8]]]=Rm[3];end;else if jm~=113 then if Rm[2]~=237 then local VR,kR=Rm[9],ga-H1;do if not(kR<0)then else kR=-1;end;end;for SA=VR,VR+kR do do(Xa)[SA]=sa[H1+(SA-VR)+1];end;end;za=VR+kR;else do Ya=Ya-1;end;(S1)[Ya]={[8]=(Rm[8]-106)%256,[7]=1,[9]=(Rm[9]-106)%256};end;else do if not(Xa[Rm[8]]<=Xa[Rm[2]])then Ya=Ya+1;end;end;end;end;end;end;end;else if jm>=102 then do if not(jm<106)then if not(jm>=108)then if jm==107 then Xa[Rm[9]]=Xa[Rm[8]]<Rm[3];else local w4,K4,F4=Rm[9],Rm[8],Rm[2];if K4==0 then else za=w4+K4-1;end;local l4,R4=YS,(YS);do if K4==1 then l4,R4=W(Xa[w4]());else l4,R4=W(Xa[w4](K(Xa,w4+1,za)));end;end;if F4==1 then za=w4-1;else do if F4==0 then do l4=l4+w4-1;end;do za=l4;end;else l4=w4+F4-2;za=l4+1;end;end;local sf=0;for hT=w4,l4 do do sf=sf+1;end;do Xa[hT]=R4[sf];end;end;end;end;else do if jm~=109 then do(Xa)[Rm[9]]=h(Rm[1],Xa[Rm[2]]);end;else(Xa)[Rm[9]]=Xa[Rm[8]]>Xa[Rm[2]];end;end;end;else if not(jm<104)then do if jm==105 then do(Xa)[Rm[9]]=Rm[4];end;else Xa[Rm[9]]=h(Rm[1],Rm[3]);end;end;else if jm~=103 then do repeat local U3,q3=Q1,(Xa);if#U3>0 then local IB=({});do for Vv,nv in DS,U3 do for JK,XK in DS,nv do if not(XK[1]==q3 and XK[2]>=0)then else local q8=XK[2];do if not(not IB[q8])then else do(IB)[q8]={q3[q8]};end;end;end;XK[1]=IB[q8];do XK[2]=1;end;end;end;end;end;end;until OS;end;return;else(Xa)[Rm[9]]=Ia[Rm[4]];end;end;end;end;else do if not(jm<98)then if jm>=100 then if jm==101 then do if Rm[2]==NS then Ya=Ya-1;(S1)[Ya]={[9]=(Rm[9]-7)%256,[7]=51,[2]=(Rm[8]-7)%256};else Xa[Rm[9]]=YS;end;end;else do if Rm[2]==19 then Ya=Ya-1;S1[Ya]={[9]=(Rm[9]-WS)%256,[2]=(Rm[8]-215)%256,[7]=20};elseif Rm[2]==103 then do Ya=Ya-1;end;do(S1)[Ya]={[9]=(Rm[9]-221)%256,[8]=(Rm[8]-221)%256,[7]=112};end;elseif Rm[2]~=254 then do repeat local vd,ud,xd=Q1,Xa,(Rm[9]);if not(#vd>0)then else local re={};for X4,h4 in DS,vd do for tG,eG in DS,h4 do if eG[1]==ud and eG[2]>=xd then local dx=eG[2];do if not(not re[dx])then else(re)[dx]={ud[dx]};end;end;(eG)[1]=re[dx];do(eG)[2]=1;end;end;end;end;end;until OS;end;else Ya=Ya-1;(S1)[Ya]={[8]=(Rm[8]-50)%256,[9]=(Rm[9]-50)%256,[7]=93};end;end;end;else if jm==99 then(Xa[Rm[9]])[Rm[1]]=Rm[3];else if Xa[Rm[8]]~=Rm[3]then else Ya=Ya+1;end;end;end;else if not(jm<96)then if jm==97 then if not(not(Rm[1]<=Rm[3]))then else Ya=Ya+1;end;else local Uv=(c1[Rm[8]]);Xa[Rm[9]]=Uv[1][Uv[2]];end;else if jm~=95 then(Xa)[Rm[9]]=Rm[1]<Rm[3];else(Xa)[Rm[9]]=k(Rm[1],Rm[3]);end;end;end;end;end;end;end;end;end;end;end;end);if Qa then if aa then if Sa==1 then return Xa[ya]();else return Xa[ya](K(Xa,ya+1,za));end;elseif not(ya)then else return K(Xa,ya,Sa);end;else if m(aa)==RJ then if t(aa,ZJ)then do return fJ();end;end;do if not(t(aa,"^.-:%d+: "))then i(aa,0);else i("Luraph Script:"..(V1[Ya-1]or"(internal)")..": "..F(aa),0);end;end;else(i)(aa,0);end;end;end;if not(e)then else e(J1,i1);end;do return J1;end;end;FS=2;end;end;else do if FS~=2 then CS[1]=N;break;else function LS()local nt,Gt,pt=0,YS,(YS);while nt<2 do do if nt~=0 then pt={};nt=2;else Gt={YS,YS,YS,{},YS,YS,{},YS,{}};do nt=1;end;end;end;end;local Ft={};nt=0;local Ct,St=YS,(YS);while nt<=2 do if not(nt<=0)then if nt~=1 then for Jp=1,St do do Gt[7][Jp-1]=LS();end;end;do nt=3;end;else St=u();do nt=2;end;end;else do Ct=1;end;nt=1;end;end;do nt=0;end;repeat do if not(nt<=0)then do if nt~=1 then(Gt)[16]=Q();nt=1;else(Gt)[18]=Q();break;end;end;else(Gt)[18]=Q();nt=2;end;end;until(US);nt=8;local Nt=YS;do while nt~=9 do do if nt<=3 then if nt<=1 then do if nt==0 then(Gt)[17]=u();nt=7;else(Gt)[5]=Q();nt=5;end;end;else if nt~=2 then(Gt)[2]=Q();nt=2;else(Gt)[3]=Q();nt=6;end;end;else do if nt<=5 then if nt~=4 then Nt=u();nt=4;else for qv=1,Nt do local sv,Av,Sv,dv=1,YS,YS,YS;while sv<=3 do if sv<=1 then if sv~=0 then Av=u();do sv=3;end;else do dv=u();end;sv=2;end;else if sv~=2 then Sv=u();sv=0;else for AD=Av,Sv do(Gt[9])[AD]=dv;end;sv=4;end;end;end;end;nt=3;end;else if not(nt<=6)then if nt~=7 then Gt[13]=u();do nt=1;end;else Gt[14]=u();nt=9;end;else(Gt)[10]=u();nt=0;end;end;end;end;end;end;end;nt=4;local Bt,Ot=YS,YS;repeat do if not(nt<=1)then if not(nt<=2)then if nt~=3 then Gt[17]=u();nt=2;else Bt=u()-133720;do nt=1;end;end;else(Gt)[8]=Q();nt=3;end;else if nt~=0 then Ot=Q();nt=0;else for nG=1,Bt do local SG=({YS,YS,YS,YS,YS,YS,YS,YS,YS,YS});local ZG=(d(Ot));local FG=(16);while FG<17 do do if not(FG<=7)then if not(FG<=11)then if not(FG<=13)then if FG<=14 then SG[8]=B(9,14,ZG);do FG=6;end;else if FG~=15 then SG[6]=B(18,14,ZG);FG=4;else SG[20]=B(27,2,ZG);do FG=4;end;end;end;else if FG~=12 then SG[7]=Q();FG=2;else(SG)[6]=B(18,14,ZG);FG=16;end;end;else do if not(FG<=9)then if FG~=10 then SG[17]=B(22,8,ZG);do FG=17;end;else SG[17]=B(22,8,ZG);FG=10;end;else if FG~=8 then SG[8]=B(9,14,ZG);FG=6;else do(SG)[20]=B(27,2,ZG);end;do FG=3;end;end;end;end;end;else if not(FG<=3)then if FG<=5 then if FG~=4 then(SG)[6]=B(18,14,ZG);do FG=5;end;else(SG)[2]=B(9,23,ZG);FG=8;end;else if FG~=6 then SG[9]=B(8,6,ZG);FG=4;else(SG)[6]=B(18,14,ZG);do FG=10;end;end;end;else if not(FG<=1)then if FG~=2 then SG[8]=B(9,14,ZG);FG=2;else(SG)[9]=B(8,6,ZG);FG=1;end;else do if FG~=0 then(SG)[7]=Q();FG=11;else(SG)[9]=B(8,6,ZG);do FG=7;end;end;end;end;end;end;end;end;do(Gt[4])[nG]=SG;end;end;nt=5;end;end;end;until nt==5;nt=1;local lt,Qt=YS,YS;while nt~=4 do if nt<=1 then if nt~=0 then lt=Q();nt=2;else Gt[1]=B(1,2,lt)~=0;nt=3;end;else if nt~=2 then Qt=u()-133731;nt=4;else Gt[6]=B(1,1,lt)~=0;do nt=0;end;end;end;end;nt=1;local et,vt=YS,(YS);while nt<3 do if not(nt<=0)then if nt==1 then do et=Q();end;nt=2;else vt=Q()~=0;nt=0;end;else for bk=1,Qt do local lk,uk=YS,YS;local Ok=(0);while(OS)do if Ok~=0 then uk=Q();break;else Ok=1;end;end;Ok=0;while(OS)do do if not(Ok<=0)then do if Ok~=1 then do if uk==14 then lk=R(j(et),6);elseif uk==166 then lk=R(j(et),Q());elseif uk==167 then lk=R(j(et),u());elseif uk==xJ then lk=l();elseif uk==124 then lk=US;elseif uk==4 then lk=R(j(et),l()+u());elseif uk==35 then lk=R(j(et),u());elseif uk==21 then do lk=g();end;elseif uk==171 then do lk=l();end;elseif uk~=81 then else do lk=OS;end;end;end;Ok=1;else if uk==14 then lk=R(j(et),6);elseif uk==166 then lk=R(j(et),Q());elseif uk==VJ then lk=R(j(et),u());elseif uk==224 then lk=l();elseif uk==124 then do lk=US;end;elseif uk==4 then do lk=R(j(et),l()+u());end;elseif uk==35 then lk=R(j(et),u());elseif uk==21 then lk=g();elseif uk==171 then lk=l();elseif uk~=81 then else do lk=OS;end;end;do Ok=0;end;end;end;else if uk==14 then lk=R(j(et),6);elseif uk==nJ then lk=R(j(et),Q());elseif uk==167 then lk=R(j(et),u());elseif uk==224 then lk=l();elseif uk==124 then lk=US;elseif uk==4 then lk=R(j(et),l()+u());elseif uk==35 then lk=R(j(et),u());elseif uk==21 then lk=g();elseif uk==171 then do lk=l();end;elseif uk~=81 then else lk=OS;end;do break;end;end;end;end;(pt)[bk-1]=Ct;local kk=({lk,{}});do for iq=0,2 do if not(iq<=0)then if iq~=1 then if not(vt)then else local yo=(1);while yo~=2 do do if yo==0 then vS=vS+1;yo=2;else(N)[vS]=kk;do yo=0;end;end;end;end;end;else Ct=Ct+1;end;else Ft[Ct]=kk;end;end;end;end;nt=3;end;end;local ct=(s[Gt[5]]);for Z_=0,1 do if Z_~=0 then(Gt)[17]=u();else do for kk=1,Bt do local Zk=Gt[4][kk];local Tk=ct[Zk[7]];local Kk=(YS);local lk=(0);while(OS)do if lk~=0 then do if not((Tk==9 or Kk)and Zk[8]>255)then else local ew,Mw=YS,YS;local Rw=(2);while Rw<4 do if not(Rw<=1)then if Rw~=2 then if not(Mw)then else local qv=YS;do for gR=0,2 do do if not(gR<=0)then do if gR~=1 then do qv[#qv+1]={Zk,1};end;else qv=Mw[2];end;end;else(Zk)[1]=Mw[1];end;end;end;end;end;do Rw=4;end;else do(Zk)[10]=OS;end;Rw=0;end;else if Rw==0 then ew=pt[Zk[8]-256];Rw=1;else do Mw=Ft[ew];end;Rw=3;end;end;end;end;end;do break;end;else do Kk=Tk==3;end;lk=1;end;end;do for vA=0,2 do if not(vA<=0)then if vA~=1 then if Tk==13 then Zk[6]=kk+(Zk[6]-131071)+1;end;else do if not((Tk==4 or Kk)and Zk[2]>255)then else local Bn,Rn=YS,(YS);for qf=0,3 do if not(qf<=1)then if qf==2 then do Rn=Ft[Bn];end;else if not(Rn)then else(Zk)[3]=Rn[1];local pE=1;local oE=(YS);while pE<2 do do if pE~=0 then oE=Rn[2];do pE=0;end;else oE[#oE+1]={Zk,3};pE=2;end;end;end;end;end;else if qf==0 then Zk[5]=OS;else Bn=pt[Zk[2]-256];end;end;end;end;end;end;else if Tk~=6 then else local AA=pt[Zk[6]];local LA=Ft[AA];if not(LA)then else(Zk)[4]=LA[1];local C4=(LA[2]);do(C4)[#C4+1]={Zk,4};end;end;end;end;end;end;end;end;end;end;return Gt;end;FS=1;end;end;end;until(US);do N=YS;end;return PS(YS,X,mS)(...);end)("\114\115\104\105\102\116","\96\102\111\114\96\32\115\116\101\112\32\118\97\108\117\101\32\109\117\115\116\32\98\101\32\97\32\110\117\109\98\101\114","\98\97\110\100","\115\116\114\105\110\103",125,getfenv,rawget,type,unpack,coroutine.yield,"",224,"\96\102\111\114\96\32\105\110\105\116\105\97\108\32\118\97\108\117\101\32\109\117\115\116\32\98\101\32\97\32\110\117\109\98\101\114",192,"\96\102\111\114\96\32\108\105\109\105\116\32\118\97\108\117\101\32\109\117\115\116\32\98\101\32\97\32\110\117\109\98\101\114",table.unpack,pcall,true,nil,setfenv,string.gsub,112,error,next,"\97\116\116\101\109\112\116\32\116\111\32\121\105\101\108\100\32\97\99\114\111\115\115\32\109\101\116\97\109\101\116\104\111\100\47\67\37\45\99\97\108\108\32\98\111\117\110\100\97\114\121","LPH>",select,_ENV,setmetatable,assert,"\95\95\109\111\100\101","\109\97\116\99\104","\98\121\116\101",tostring,"\99\104\97\114","\46\46",bit32,215,111,"\108\115\104\105\102\116",167,"\35",false,"\98\120\111\114",166,255,"\118","\98\110\111\116","\105\110\115\101\114\116",tonumber,256,rawset,65536,table,string.sub,"\98\111\114",string,string.rep,bit,...);end;